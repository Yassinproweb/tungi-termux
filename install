#!/data/data/com.termux/files/usr/bin/bash

## Author  : Yassin Katungi
## Twitter : @Yassinproweb
## Github  : @Yassinproweb
## Reddit  : @Yassinproweb

## tungi-termux installer script

## ANSI Colors (FG & BG)
RED="$(printf '\033[31m')" GREEN="$(printf '\033[32m')" ORANGE="$(printf '\033[33m')" BLUE="$(printf '\033[34m')"
MAGENTA="$(printf '\033[35m')" CYAN="$(printf '\033[36m')" WHITE="$(printf '\033[37m')" BLACK="$(printf '\033[30m')"
REDBG="$(printf '\033[41m')" GREENBG="$(printf '\033[42m')" ORANGEBG="$(printf '\033[43m')" BLUEBG="$(printf '\033[44m')"
MAGENTABG="$(printf '\033[45m')" CYANBG="$(printf '\033[46m')" WHITEBG="$(printf '\033[47m')" BLACKBG="$(printf '\033[40m')"
DEFAULT_FG="$(printf '\033[39m')" DEFAULT_BG="$(printf '\033[49m')"

## Directories
PREFIX='/data/data/com.termux/files/usr'
TERMUX_DIR="$HOME/.termux"
DIR="$(pwd)"

## Banner
banner() {
  clear
  echo "
    ${BLUE}┌──────────────────────────────────────────────────┐
    ${BLUE}│${RED}░▀█▀░█░█░█▀█░█▀▀░▀█▀${ORANGE}░░░░░${GREEN}░▀█▀░█▀▀░█▀▄░█▄█░█░█░█░█${BLUE}│
    ${BLUE}│${RED}░░█░░█░█░█░█░█░▄░░█░${ORANGE}░▄▄▄${RED}░${GREEN}░░█░░█▀▀░█▀▄░█░█░█░█░▄▀▄${BLUE}│
    ${BLUE}│${RED}░░▀░░▀▀▀░▀░▀░▀▀▀░▀▀▀${ORANGE}░░░░░${GREEN}░░▀░░▀▀▀░▀░▀░▀░▀░▀▀▀░▀░▀${BLUE}│
    ${BLUE}└──────────────────────────────────────────────────┘
    ${BLUE}[${RED}*${BLUE}] ${ORANGE}By- Yassin Katungi ${RED}//${ORANGE} Yassinproweb"
}

## Script Termination
exit_on_signal_SIGINT() {
  {
    printf "\n\n%s\n" "    ${BLUE}[${RED}*${BLUE}] ${RED}Script interrupted." 2>&1
    echo
    reset_color
  }
  exit 0
}

exit_on_signal_SIGTERM() {
  {
    printf "\n\n%s\n" "    ${BLUE}[${RED}*${BLUE}] ${RED}Script terminated." 2>&1
    echo
    reset_color
  }
  exit 0
}

trap exit_on_signal_SIGINT SIGINT
trap exit_on_signal_SIGTERM SIGTERM

## Reset terminal colors
reset_color() {
  tput sgr0 # reset attributes
  tput op   # reset color
  return
}

## Prerequisite
prerequisite() {
  {
    echo
    echo "    ${BLUE}[${RED}*${BLUE}] ${ORANGE}Installing Dependencies..."${CYAN}
    echo
  }
  if [[ (-f $PREFIX/bin/wget) && (-f $PREFIX/bin/tput) ]]; then
    { echo "    ${BLUE}[${RED}*${BLUE}] ${GREEN}Dependencies are already Installed!"; }
  else
    {
      pkg update -y
      pkg install -y wget ncurses-utils
    }
    (type -p wget tput &>/dev/null) && {
      echo
      echo "    ${BLUE}[${RED}*${BLUE}] ${GREEN}Dependencies are succesfully installed!"
    } || {
      echo
      echo "    ${BLUE}[${RED}!${BLUE}] ${RED}Error Occured, failed to install dependencies."
      echo
      reset_color
      exit 1
    }
  fi
}

## Install tungi-termux
install_tungi() {
  echo "    ${BLUE}[${RED}*${BLUE}] ${ORANGE}Installing tungi-termux..."
  # Delete old files
  if [[ (-L $PREFIX/bin/tungi-termux) && (-d $PREFIX/share/tungi-termux) ]]; then
    echo "    ${BLUE}[${RED}*${BLUE}] ${RED}Deleting files from previous installation..."${BLUE}
    {
      rm -r $PREFIX/bin/tungi-termux $PREFIX/share/tungi-termux
      echo
    }
  fi
  # termux config dir
  if [[ ! -d $TERMUX_DIR ]]; then
    mkdir $TERMUX_DIR
  else
    cp -r $TERMUX_DIR{,.backup}
  fi
  # Coping files
  { echo "    ${BLUE}[${RED}*${BLUE}] ${ORANGE}Coping files in ${GREEN}$PREFIX/share ${ORANGE}directory..."${BLUE}; }
  {
    mkdir $PREFIX/share/tungi-termux
    cp -r $DIR/colors $PREFIX/share/tungi-termux
    cp -r $DIR/fonts $PREFIX/share/tungi-termux
    cp -r $DIR/tungi $PREFIX/share/tungi-termux
  }
  {
    chmod +x $PREFIX/share/tungi-termux/tungi
    ln -s $PREFIX/share/tungi-termux/tungi $PREFIX/bin/tungi-termux
  }

  # Verify files
  if [[ (-L $PREFIX/bin/tungi-termux) && (-d $PREFIX/share/tungi-termux) ]]; then
    {
      echo
      echo "    ${BLUE}[${RED}*${BLUE}] ${GREEN}Successfully Installed."
    }
    {
      echo "    ${BLUE}[${RED}*${BLUE}] ${GREEN}Now You Can Run This Program By Just typing ${MAGENTA}tungi-termux${GREEN}."
      echo
    }
    {
      reset_color
      exit 0
    }
  else
    {
      echo "    ${BLUE}[${RED}!${BLUE}] ${RED}Error Occured."
      echo
      reset_color
      exit 1
    }
  fi
}

## Main
main() {
  banner
  prerequisite
  # Check for previous installation
  if [[ (-L $PREFIX/bin/tungi-termux) && (-d $PREFIX/share/tungi-termux) ]]; then
    {
      echo
      echo "    ${BLUE}[${RED}!${BLUE}] ${MAGENTA}tungi-termux ${GREEN}is already installed."
    }
    {
      read -p "    ${BLUE}[${RED}?${BLUE}] ${ORANGE}Do you wanna re-install it? (y/n): ${GREEN}"
      echo
    }
    if [[ "$REPLY" =~ ^[y/Y]$ ]]; then
      install_tungi
    else
      {
        reset_color
        exit
      }
    fi
  else
    {
      echo
      install_tungi
    }
  fi
}

main
